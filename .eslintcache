[{"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\index.js":"1","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\App.js":"2","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\firebase.js":"3","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Login\\Login.js":"4","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Widgets\\Widgets.js":"5","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Sidebar\\Sidebar.js":"6","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\SinglePost\\SinglePost.js":"7","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Sidebar\\SidebarOption\\SidebarOption.js":"8","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\feed\\Feed.js":"9","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\feed\\SpeakupBox\\SpeakUpBox.js":"10","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\feed\\Post\\Post.js":"11","C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\hooks\\useLongPress.js":"12"},{"size":219,"mtime":1638176273987,"results":"13","hashOfConfig":"14"},{"size":1587,"mtime":1638206770917,"results":"15","hashOfConfig":"14"},{"size":790,"mtime":1638169981486,"results":"16","hashOfConfig":"14"},{"size":2320,"mtime":1638205921506,"results":"17","hashOfConfig":"14"},{"size":1511,"mtime":1638183639281,"results":"18","hashOfConfig":"14"},{"size":4335,"mtime":1638185661625,"results":"19","hashOfConfig":"14"},{"size":1663,"mtime":1638206873418,"results":"20","hashOfConfig":"14"},{"size":292,"mtime":1638185697168,"results":"21","hashOfConfig":"14"},{"size":1072,"mtime":1638183584087,"results":"22","hashOfConfig":"14"},{"size":5451,"mtime":1638184791248,"results":"23","hashOfConfig":"14"},{"size":10076,"mtime":1638206804542,"results":"24","hashOfConfig":"14"},{"size":1701,"mtime":1638183666743,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hl21pg",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\index.js",[],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\App.js",["52"],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\firebase.js",[],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Login\\Login.js",["53"],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Widgets\\Widgets.js",["54","55"],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Sidebar\\Sidebar.js",["56","57","58","59","60"],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\SinglePost\\SinglePost.js",[],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\Sidebar\\SidebarOption\\SidebarOption.js",[],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\feed\\Feed.js",[],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\feed\\SpeakupBox\\SpeakUpBox.js",["61","62"],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\components\\feed\\Post\\Post.js",["63"],"import { Avatar } from \"@material-ui/core\";\r\nimport \"./Post.css\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport db, { auth, storage } from \"../../../firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport useLongPress from \"../../../hooks/useLongPress\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  RedditIcon,\r\n  RedditShareButton,\r\n  TelegramIcon,\r\n  TelegramShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  WhatsappIcon,\r\n  WhatsappShareButton,\r\n} from \"react-share\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    outline: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"start\",\r\n    color: \"black\",\r\n    flexDirection: \"column\",\r\n    padding: 10,\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Post({\r\n  timestamp,\r\n  displayName,\r\n  username,\r\n  verified,\r\n  uid,\r\n  text,\r\n  image,\r\n  avatar,\r\n  id,\r\n  likes,\r\n  singlePost,\r\n}) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [open2, setOpen2] = useState(false);\r\n  const [user] = useAuthState(auth);\r\n  const [liked, setLiked] = useState(null);\r\n\r\n  const LINK = `${window.location.href}`;\r\n\r\n  const onLongPress = () => {\r\n    if (user?.uid === uid) {\r\n      handleOpen();\r\n    }\r\n  };\r\n\r\n  const defaultOptions = {\r\n    shouldPreventDefault: true,\r\n    delay: 500,\r\n  };\r\n\r\n  const onClick = () => {};\r\n\r\n  const longPressEvent = useLongPress(onLongPress, onClick, defaultOptions);\r\n\r\n  const checkIfLiked = () => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.exists) {\r\n          setLiked(snapshot.data()[id]);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfLiked();\r\n  }, [checkIfLiked]);\r\n\r\n  const like = (e) => {\r\n    e.cancelBubble = true;\r\n    if (e.stopPropagation) e.stopPropagation();\r\n\r\n    checkIfLiked();\r\n\r\n    setTimeout(() => {\r\n      if (liked !== true) {\r\n        db.collection(\"users\")\r\n          .doc(user.uid)\r\n          .set(\r\n            {\r\n              [id]: true,\r\n            },\r\n            { merge: true }\r\n          );\r\n        db.collection(\"posts\")\r\n          .doc(id)\r\n          .set(\r\n            {\r\n              likes: likes + 1,\r\n            },\r\n            { merge: true }\r\n          );\r\n      } else if (liked === true) {\r\n        db.collection(\"users\")\r\n          .doc(user.uid)\r\n          .set(\r\n            {\r\n              [id]: false,\r\n            },\r\n            { merge: true }\r\n          );\r\n        db.collection(\"posts\")\r\n          .doc(id)\r\n          .set(\r\n            {\r\n              likes: likes - 1,\r\n            },\r\n            { merge: true }\r\n          );\r\n      }\r\n    }, 300);\r\n  };\r\n\r\n  const noEvent = (e) => {\r\n    e.cancelBubble = true;\r\n    if (e.stopPropagation) e.stopPropagation();\r\n  };\r\n\r\n  const share = (e) => {\r\n    e.cancelBubble = true;\r\n    if (e.stopPropagation) e.stopPropagation();\r\n    handleOpen2();\r\n  };\r\n\r\n  const handleOpen = (e) => {\r\n    e?.preventDefault();\r\n\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOpen2 = (e) => {\r\n    e?.preventDefault();\r\n\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n\r\n  // window.document.addEventListener(\"contextmenu\", (event) =>\r\n  //   event.preventDefault()\r\n  // );\r\n\r\n  const deletePost = () => {\r\n    handleClose();\r\n\r\n    const confirm = window.confirm(\r\n      \"Are you sure you want to delete this tweet?\"\r\n    );\r\n\r\n    if (singlePost) {\r\n      if (confirm === true) {\r\n        history.push(\"/\");\r\n\r\n        setTimeout(() => {\r\n          db.collection(\"posts\").doc(id).delete();\r\n\r\n          if (image) {\r\n            storage.ref(`posts/${id}`).delete();\r\n          }\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    if (!singlePost) {\r\n      if (confirm === true) {\r\n        db.collection(\"posts\").doc(id).delete();\r\n\r\n        if (image) {\r\n          storage.ref(`posts/${id}`).delete();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // const editPost = () => {\r\n  //   const newMessage = prompt(\"Please enter the new tweet -\");\r\n\r\n  //   if (!newMessage || newMessage[0] === \" \") {\r\n  //     return;\r\n  //   }\r\n\r\n  //   db.collection(\"posts\").doc(id).update({\r\n  //     text: newMessage,\r\n  //   });\r\n\r\n  //   handleClose();\r\n  // };\r\n\r\n  return (\r\n    <div\r\n      className=\"post\"\r\n      onContextMenu={uid === user?.uid && handleOpen}\r\n      {...longPressEvent}\r\n    >\r\n      <div className=\"post__avatarcontainer\">\r\n        <Avatar className=\"post__avatar\" src={avatar} />\r\n      </div>\r\n      <div className=\"post__body\" onClick={() => history.push(`/tweet/${id}`)}>\r\n        <div className=\"post__header\">\r\n          <div className=\"post__headerText\">\r\n            <h3>\r\n              {displayName}{\" \"}\r\n              <span className=\"post__headerSpecial\">\r\n                {verified && <VerifiedUserIcon className=\"post__badge\" />} @\r\n                {username}\r\n              </span>\r\n            </h3>\r\n            <p className=\"post__timestamp\">{`${new Date(\r\n              timestamp?.toDate()\r\n            ).toUTCString()}`}</p>\r\n          </div>\r\n          <div className=\"post__headerDescription\">\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n        {image && <img src={image} alt=\"tweetImg\" loading=\"lazy\" />}\r\n        <div className=\"post__footer\">\r\n          <IconButton onClick={noEvent}>\r\n            <ChatBubbleOutlineIcon\r\n              fontSize=\"small\"\r\n              style={{ color: \"white\" }}\r\n            />\r\n          </IconButton>\r\n          <IconButton onClick={noEvent}>\r\n            <RepeatIcon fontSize=\"small\" style={{ color: \"white\" }} />\r\n          </IconButton>\r\n          <div>\r\n            <IconButton\r\n              className=\"post__likeButton\"\r\n              color=\"secondary\"\r\n              onClick={like}\r\n            >\r\n              {liked ? (\r\n                <FavoriteIcon fontSize=\"small\" style={{ color: \"#E0245E\" }} />\r\n              ) : (\r\n                <FavoriteBorderIcon\r\n                  fontSize=\"small\"\r\n                  className=\"post__likeIcon\"\r\n                />\r\n              )}\r\n              {likes > 0 && (\r\n                <>\r\n                  {liked ? (\r\n                    <p className=\"post__likeText\">{likes}</p>\r\n                  ) : (\r\n                    <p className=\"post__unlikeText\">{likes}</p>\r\n                  )}\r\n                </>\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={share}\r\n            className=\"post__shareButton\"\r\n          >\r\n            <PublishIcon className=\"post__shareIcon\" fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <Modal open={open} onClose={handleClose} className={classes.modal}>\r\n        <div className={classes.paper}>\r\n          {user?.uid === uid && (\r\n            <>\r\n              <div onClick={deletePost} className=\"post__btn\">\r\n                <p style={{ color: \"red\" }}>Delete Tweet</p>\r\n              </div>\r\n              {/* <div onClick={editPost} className=\"post__btn\">\r\n                <p>Edit Tweet</p>\r\n              </div> */}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n      <Modal open={open2} onClose={handleClose2} className={classes.modal}>\r\n        <div className={classes.paper}>\r\n          <h2>Share</h2>\r\n          <div className=\"space\" />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              width: \"80%\",\r\n              marginLeft: -10,\r\n            }}\r\n          >\r\n            <EmailShareButton\r\n              subject=\"Twitter Clone Tweet\"\r\n              body={\"Hi, check out this tweet on the Twitter clone!!\"}\r\n              url={LINK}\r\n            >\r\n              <EmailIcon size={32} round={true} />\r\n            </EmailShareButton>\r\n\r\n            <TwitterShareButton\r\n              title={\"Hi, check out this tweet on the Twitter clone!!\"}\r\n              via=\"PrashoonB\"\r\n              url={LINK}\r\n            >\r\n              <TwitterIcon size={32} round={true} />\r\n            </TwitterShareButton>\r\n\r\n            <FacebookShareButton\r\n              quote=\"Hi, check out this tweet on the Twitter clone!\"\r\n              url={LINK}\r\n            >\r\n              <FacebookIcon size={32} round={true} />\r\n            </FacebookShareButton>\r\n\r\n            <WhatsappShareButton\r\n              title={\"Hi, check out this tweet on the Twitter clone!!\"}\r\n              url={LINK}\r\n            >\r\n              <WhatsappIcon size={32} round={true} />\r\n            </WhatsappShareButton>\r\n\r\n            <TelegramShareButton\r\n              title={\"Hi, check out this tweet on the Twitter clone!!\"}\r\n              url={LINK}\r\n            >\r\n              <TelegramIcon size={32} round={true} />\r\n            </TelegramShareButton>\r\n\r\n            <RedditShareButton\r\n              title={\"Hi, check out this tweet on the Twitter clone!!\"}\r\n              url={LINK}\r\n            >\r\n              <RedditIcon size={32} round={true} />\r\n            </RedditShareButton>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n",["64","65"],"C:\\Users\\anshb\\OneDrive\\Desktop\\SpeakUp\\speakup\\src\\hooks\\useLongPress.js",["66"],{"ruleId":"67","severity":1,"message":"68","line":7,"column":3,"nodeType":"69","messageId":"70","endLine":7,"endColumn":11},{"ruleId":"67","severity":1,"message":"71","line":16,"column":10,"nodeType":"69","messageId":"70","endLine":16,"endColumn":14},{"ruleId":"67","severity":1,"message":"72","line":4,"column":3,"nodeType":"69","messageId":"70","endLine":4,"endColumn":21},{"ruleId":"67","severity":1,"message":"73","line":12,"column":10,"nodeType":"69","messageId":"70","endLine":12,"endColumn":19},{"ruleId":"67","severity":1,"message":"74","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":19},{"ruleId":"67","severity":1,"message":"75","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":19},{"ruleId":"67","severity":1,"message":"76","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":23},{"ruleId":"67","severity":1,"message":"77","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":26},{"ruleId":"67","severity":1,"message":"78","line":10,"column":8,"nodeType":"69","messageId":"70","endLine":10,"endColumn":19},{"ruleId":"67","severity":1,"message":"79","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":114,"column":19,"nodeType":"82","endLine":118,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":89,"column":9,"nodeType":"85","endLine":98,"endColumn":4,"suggestions":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"67","severity":1,"message":"91","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'TwitterShareButton' is defined but never used.","'showTweet' is assigned a value but never used.","'TwitterIcon' is defined but never used.","'ExploreIcon' is defined but never used.","'MailOutlineIcon' is defined but never used.","'BookmarkBorderIcon' is defined but never used.","'ListAltIcon' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","The 'checkIfLiked' function makes the dependencies of useEffect Hook (at line 102) change on every render. To fix this, wrap the definition of 'checkIfLiked' in its own useCallback() Hook.","VariableDeclarator",["92"],"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'React' is defined but never used.",{"desc":"95","fix":"96"},"no-global-assign","no-unsafe-negation","Wrap the definition of 'checkIfLiked' in its own useCallback() Hook.",{"range":"97","text":"98"},[2324,2526],"useCallback(() => {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.exists) {\r\n          setLiked(snapshot.data()[id]);\r\n        }\r\n      });\r\n  })"]